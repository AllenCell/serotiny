hydra:
  run:
    dir: ${output_root}/${task}/${now:%Y-%m-%d}/${now:%H-%M-%S_%f}
  sweep:
    dir: ${output_root}/${task}/${now:%Y-%m-%d}
    subdir: ${now:%H-%M-%S_%f}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - model=tabular_vae_nucmorph.yaml
    - data=variance_subset.yaml
    - output_root=/allen/aics/modeling/theok/Projects/idle/serotiny/output
  job:
    name: train_apply
    override_dirname: data=variance_subset.yaml,model=tabular_vae_nucmorph.yaml,output_root=/allen/aics/modeling/theok/Projects/idle/serotiny/output
    id: ???
    num: ???
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /allen/aics/modeling/theok/Projects/idle/serotiny
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: serotiny.models.ops
      schema: pkg
      provider: main
    - path: serotiny.config
      schema: pkg
      provider: serotiny-searchpath-plugin
    - path: bvae.config
      schema: pkg
      provider: bvae-searchpath-plugin
    - path: ''
      schema: structured
      provider: schema
    choices:
      data: variance_subset.yaml
      model: tabular_vae_nucmorph.yaml
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
